<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Lennart Breede</title>
    <link>http://localhost:1313/posts/</link>
    <description>Recent content in Posts on Lennart Breede</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 02 Jul 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title></title>
      <link>http://localhost:1313/posts/implementing-a-merkle-tree-in-python/</link>
      <pubDate>Tue, 02 Jul 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/implementing-a-merkle-tree-in-python/</guid>
      <description>Implementing a Merkle Tree in Python In this article, we will implement a Merkle Tree in Python, a data structure used extensively in [[Blockchain]] technology and other systems requiring data integrity verification. By the end of this article, you will understand how Merkle Trees work, their benefits, what the Merkle Root is, and how to implement all of this in Python.&#xA;The Merkle Tree A Merkle Tree is a binary hash tree that hashes a collection of data blocks so that any change in the original data results in entirely different values throughout the tree.</description>
    </item>
    <item>
      <title>My First Post</title>
      <link>http://localhost:1313/posts/my-first-post/</link>
      <pubDate>Sun, 14 Jan 2024 07:07:07 +0100</pubDate>
      <guid>http://localhost:1313/posts/my-first-post/</guid>
      <description>Introduction This is bold text, and this is emphasized text.&#xA;Visit the Hugo website!</description>
    </item>
  </channel>
</rss>
